{"codeList":["from pymilvus import MilvusClient, DataType\n\n# 1. Connect to Milvus (initialize the client)\nclient = MilvusClient(uri=\"http://localhost:19530\")\n\n# 2. Define the collection schema\nschema = MilvusClient.create_schema(auto_id=False, description=\"schema for example collection\")\nschema.add_field(\"id\", DataType.INT64, is_primary=True)  # Primary key field\nschema.add_field(\"embedding\", DataType.FLOAT_VECTOR, dim=128)  # Vector field\n\n# 3. Prepare index parameters (optional if indexing at creation time)\nindex_params = client.prepare_index_params()\nindex_params.add_index(\n    field_name=\"embedding\",\n    index_type=\"AUTOINDEX\",\n    metric_type=\"L2\"\n)\n\n# 4. Create the collection with indexes and load it into memory automatically\nclient.create_collection(\n    collection_name=\"example_collection\",\n    schema=schema,\n    index_params=index_params\n)\n\nprint(\"Collection created and loaded with index!\")\n","client.create_collection(\n    collection_name=\"test_collection\",\n    dimension=128\n)\n","import asyncio\nfrom pymilvus import AsyncMilvusClient\n\nasync def insert_vectors_concurrently():\n    client = AsyncMilvusClient(uri=\"http://localhost:19530\")\n    \n    vectors_to_insert = [[...], [...], ...]  # Assume 100,000 vectors\n    batch_size = 1000  # Recommended batch size\n    tasks = []\n\n    for i in range(0, len(vectors_to_insert), batch_size):\n        batch_vectors = vectors_to_insert[i:i+batch_size]\n\n        # Construct batch data\n        data = [\n            list(range(i, i + len(batch_vectors))),  # Batch IDs\n            batch_vectors  # Batch vectors\n        ]\n\n        # Add an asynchronous task for inserting each batch\n        tasks.append(client.insert(\"example_collection\", data=data))\n\n    # Concurrently execute batch inserts\n    insert_results = await asyncio.gather(*tasks)\n    await client.close()\n\n# Execute asynchronous tasks\nasyncio.run(insert_vectors_concurrently())\n"],"headingContent":"","anchorList":[{"label":"TL;DR","href":"TLDR","type":2,"isActive":false},{"label":"개발 이유 커뮤니티의 고충 해결","href":"Why-We-Built-It-Addressing-Community-Pain-Points","type":2,"isActive":false},{"label":"솔루션: Milvus SDK v2","href":"The-Solution-Milvus-SDK-v2","type":2,"isActive":false},{"label":"Milvus SDK v2 시작하기: 샘플 코드","href":"Getting-Started-with-Milvus-SDK-v2-Sample-Code","type":2,"isActive":false},{"label":"간편한 마이그레이션","href":"Migration-Made-Easy","type":2,"isActive":false},{"label":"결론","href":"Conclusion","type":2,"isActive":false}]}